{
  "message": "Добавлена поддержка Jivo виджетов v2.0 с принудительным обновлением кэша",
  "content": "<!DOCTYPE html>
<html>
<head>
    <!-- Yandex.Metrika counter -->
    <script type="text/javascript">
        (function(m,e,t,r,i,k,a){
            m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
            m[i].l=1*new Date();
            for (var j = 0; j < document.scripts.length; j++) {if (document.scripts[j].src === r) { return; }}
            k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)
        })(window, document,'script','https://mc.yandex.ru/metrika/tag.js?id=103841163', 'ym');

        ym(103841163, 'init', {ssr:true, webvisor:true, clickmap:true, ecommerce:"dataLayer", accurateTrackBounce:true, trackLinks:true});
    </script>
    <noscript><div><img src="https://mc.yandex.ru/watch/103841163" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
    <!-- /Yandex.Metrika counter -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <title>Мульти-кнопка с Jivo виджетами v2.0</title>
    <style>
        .multibutton {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 9999;
        }

        .main-button {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: none;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
        }

        .main-button:hover {
            transform: scale(1.1);
        }

        .main-button img {
            width: 30px;
            height: 30px;
            filter: brightness(0) invert(1);
        }

        .popup-menu {
            position: absolute;
            bottom: 70px;
            right: 0;
            display: none;
            flex-direction: column;
            align-items: center;
            gap: 10px;
        }

        .social-button {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: none;
            background: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
            transition: all 0.3s ease;
            text-decoration: none;
        }

        .social-button:hover {
            transform: scale(1.15);
        }

        .social-button img {
            width: 25px;
            height: 25px;
        }

        .settings-panel {
            position: fixed;
            top: 20px;
            right: 20px;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            display: none;
            max-height: 80vh;
            overflow-y: auto;
        }

        .settings-toggle {
            position: fixed;
            top: 20px;
            left: 20px;
            padding: 10px 15px;
            background: #667eea;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            z-index: 10000;
        }

        .demo-content {
            height: 2000px;
            padding: 20px;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        }

        .mode-selector {
            margin-bottom: 20px;
            padding: 10px;
            background: #f8f9fa;
            border-radius: 5px;
        }

        .mode-selector label {
            display: block;
            margin-bottom: 10px;
            font-weight: bold;
        }

        .mode-selector input[type="radio"] {
            margin-right: 8px;
        }

        .jivo-settings {
            display: none;
        }

        .jivo-button-config {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 5px;
            background: #f9f9f9;
        }

        .jivo-button-config h4 {
            margin: 0 0 10px 0;
            color: #333;
        }

        .remove-button {
            background: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 3px;
            cursor: pointer;
            float: right;
            font-size: 12px;
        }

        .add-jivo-button {
            background: #28a745;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            margin-top: 10px;
        }
    </style>
</head>
<body>

<button class="settings-toggle" onclick="toggleSettings()">⚙️ Настройки</button>

<div class="settings-panel" id="settingsPanel">
    <h3>Настройка мульти-кнопки</h3>
    
    <div class="mode-selector">
        <label>Режим работы:</label>
        <label><input type="radio" name="mode" value="social" checked onchange="toggleMode()"> Социальные сети</label>
        <label><input type="radio" name="mode" value="jivo" onchange="toggleMode()"> Jivo виджеты</label>
    </div>
    
    <div id="socialSettings">
        <h4>Настройка соцсетей</h4>
        
        <div style="margin-bottom: 15px;">
            <label>Telegram:</label>
            <input type="text" id="telegramLink" placeholder="https://t.me/username" value="https://t.me/username" style="width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ddd; border-radius: 5px; box-sizing: border-box;">
        </div>
        
        <div style="margin-bottom: 15px;">
            <label>WhatsApp:</label>
            <input type="text" id="whatsappLink" placeholder="https://wa.me/1234567890" value="https://wa.me/1234567890" style="width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ddd; border-radius: 5px; box-sizing: border-box;">
        </div>
        
        <div style="margin-bottom: 15px;">
            <label>VK:</label>
            <input type="text" id="vkLink" placeholder="https://vk.com/username" value="https://vk.com/username" style="width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ddd; border-radius: 5px; box-sizing: border-box;">
        </div>
    </div>
    
    <div id="jivoSettings" class="jivo-settings">
        <h4>Настройка Jivo виджетов</h4>
        <p style="font-size: 12px; color: #666; margin-bottom: 15px;">
            Добавьте кнопки с Jivo виджетами. Каждая кнопка будет загружать свой уникальный виджет.
        </p>
        
        <div id="jivoButtonsContainer">
            <!-- Jivo кнопки будут добавляться динамически -->
        </div>
        
        <button class="add-jivo-button" onclick="addJivoButton()">+ Добавить Jivo кнопку</button>
    </div>
    
    <button onclick="applySettings()" style="width: 100%; padding: 10px; background: #667eea; color: white; border: none; border-radius: 5px; cursor: pointer; margin-top: 20px;">Применить настройки</button>
</div>

<div class="multibutton">
    <button class="main-button" onclick="toggleMenu()">
        <img src="https://cdn-icons-png.flaticon.com/512/1827/1827933.png" alt="Меню">
    </button>
    <div class="popup-menu" id="popupMenu">
        <a href="https://t.me/username" class="social-button" target="_blank" title="Telegram">
            <img src="https://cdn-icons-png.flaticon.com/512/2111/2111646.png" alt="Telegram">
        </a>
        <a href="https://wa.me/1234567890" class="social-button" target="_blank" title="WhatsApp">
            <img src="https://cdn-icons-png.flaticon.com/512/733/733585.png" alt="WhatsApp">
        </a>
        <a href="https://vk.com/username" class="social-button" target="_blank" title="VK">
            <img src="https://cdn-icons-png.flaticon.com/512/145/145813.png" alt="VK">
        </a>
    </div>
</div>

<div class="demo-content">
    <h1>Мульти-кнопка с поддержкой Jivo виджетов</h1>
    <p>Нажмите кнопку "⚙️ Настройки" в левом верхнем углу для настройки.</p>
    <p>Затем нажмите на фиолетовую кнопку в правом нижнем углу.</p>
    
    <div style="background: #e8f4fd; padding: 20px; border-radius: 10px; margin: 20px 0;">
        <h3>🆕 Новые возможности:</h3>
        <ul>
            <li><strong>Режим социальных сетей</strong> - классические кнопки для Telegram, WhatsApp, VK</li>
            <li><strong>Режим Jivo виджетов</strong> - настраиваемые кнопки с уникальными кодами виджетов</li>
            <li><strong>Динамическая загрузка</strong> - виджеты загружаются только при нажатии на кнопку</li>
            <li><strong>Неограниченное количество кнопок</strong> - добавляйте столько кнопок, сколько нужно</li>
        </ul>
    </div>
    
    <div style="height: 1500px; padding: 20px;">
        <h2>Дополнительный контент</h2>
        <p>Этот блок создан для демонстрации работы мульти-кнопки.</p>
        <p>Попробуйте переключиться между режимами в настройках!</p>
    </div>
</div>

<script>
let currentMode = 'social';
let jivoButtons = [];
let loadedJivoScripts = new Set();

function toggleSettings() {
    console.log('toggleSettings вызвана');
    const panel = document.getElementById('settingsPanel');
    if (panel.style.display === 'none' || panel.style.display === '') {
        panel.style.display = 'block';
    } else {
        panel.style.display = 'none';
    }
}

function toggleMode() {
    const mode = document.querySelector('input[name="mode"]:checked').value;
    currentMode = mode;
    
    const socialSettings = document.getElementById('socialSettings');
    const jivoSettings = document.getElementById('jivoSettings');
    
    if (mode === 'social') {
        socialSettings.style.display = 'block';
        jivoSettings.style.display = 'none';
    } else {
        socialSettings.style.display = 'none';
        jivoSettings.style.display = 'block';
    }
}

function toggleMenu() {
    console.log('toggleMenu вызвана');
    const menu = document.getElementById('popupMenu');
    if (menu.style.display === 'none' || menu.style.display === '') {
        menu.style.display = 'flex';
    } else {
        menu.style.display = 'none';
    }
}

function addJivoButton() {
    const container = document.getElementById('jivoButtonsContainer');
    const buttonId = 'jivo_' + Date.now();
    
    const buttonConfig = document.createElement('div');
    buttonConfig.className = 'jivo-button-config';
    buttonConfig.innerHTML = `
        <button class="remove-button" onclick="removeJivoButton('${buttonId}')">×</button>
        <h4>Jivo кнопка ${jivoButtons.length + 1}</h4>
        <div style="margin-bottom: 10px;">
            <label>Название кнопки:</label>
            <input type="text" id="jivo_name_${buttonId}" placeholder="Например: Продажи" style="width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ddd; border-radius: 5px; box-sizing: border-box;">
        </div>
        <div>
            <label>Код виджета Jivo:</label>
            <input type="text" id="jivo_code_${buttonId}" placeholder="<script src=&quot;//code.jivo.ru/widget/Yd1IbyauyY&quot; async></script>" style="width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ddd; border-radius: 5px; box-sizing: border-box;">
        </div>
    `;
    
    container.appendChild(buttonConfig);
    jivoButtons.push(buttonId);
}

function removeJivoButton(buttonId) {
    const buttonIndex = jivoButtons.indexOf(buttonId);
    if (buttonIndex > -1) {
        jivoButtons.splice(buttonIndex, 1);
        document.getElementById('jivoButtonsContainer').removeChild(
            document.querySelector(`#jivoButtonsContainer .jivo-button-config:nth-child(${buttonIndex + 1})`)
        );
    }
}

function loadJivoScript(scriptSrc) {
    if (loadedJivoScripts.has(scriptSrc)) {
        return;
    }
    
    const script = document.createElement('script');
    script.src = scriptSrc;
    script.async = true;
    document.head.appendChild(script);
    loadedJivoScripts.add(scriptSrc);
}

function applySettings() {
    console.log('applySettings вызвана');
    
    const menu = document.getElementById('popupMenu');
    menu.innerHTML = '';
    
    if (currentMode === 'social') {
        const telegramLink = document.getElementById('telegramLink').value;
        const whatsappLink = document.getElementById('whatsappLink').value;
        const vkLink = document.getElementById('vkLink').value;
        
        if (telegramLink && telegramLink.trim() !== '') {
            const button = document.createElement('a');
            button.href = telegramLink;
            button.className = 'social-button';
            button.target = '_blank';
            button.title = 'Telegram';
            button.innerHTML = '<img src="https://cdn-icons-png.flaticon.com/512/2111/2111646.png" alt="Telegram">';
            menu.appendChild(button);
        }
        
        if (whatsappLink && whatsappLink.trim() !== '') {
            const button = document.createElement('a');
            button.href = whatsappLink;
            button.className = 'social-button';
            button.target = '_blank';
            button.title = 'WhatsApp';
            button.innerHTML = '<img src="https://cdn-icons-png.flaticon.com/512/733/733585.png" alt="WhatsApp">';
            menu.appendChild(button);
        }
        
        if (vkLink && vkLink.trim() !== '') {
            const button = document.createElement('a');
            button.href = vkLink;
            button.className = 'social-button';
            button.target = '_blank';
            button.title = 'VK';
            button.innerHTML = '<img src="https://cdn-icons-png.flaticon.com/512/145/145813.png" alt="VK">';
            menu.appendChild(button);
        }
    } else {
        // Режим Jivo виджетов
        jivoButtons.forEach(buttonId => {
            const name = document.getElementById(`jivo_name_${buttonId}`).value;
            const code = document.getElementById(`jivo_code_${buttonId}`).value;
            
            if (name && name.trim() !== '' && code && code.trim() !== '') {
                const button = document.createElement('button');
                button.className = 'social-button';
                button.title = name;
                button.innerHTML = `<span style="font-size: 12px; font-weight: bold;">${name}</span>`;
                
                button.onclick = function() {
                    // Извлекаем src из кода виджета
                    const srcMatch = code.match(/src="([^"]+)"/);
                    if (srcMatch) {
                        loadJivoScript(srcMatch[1]);
                        alert(`Загружен виджет: ${name}`);
                    } else {
                        alert('Неверный формат кода виджета');
                    }
                };
                
                menu.appendChild(button);
            }
        });
    }
    
    alert('Настройки применены!');
}

document.addEventListener('click', function(event) {
    const multibutton = document.querySelector('.multibutton');
    const settingsPanel = document.getElementById('settingsPanel');
    const settingsToggle = document.querySelector('.settings-toggle');
    
    if (!multibutton.contains(event.target) && !settingsPanel.contains(event.target) && !settingsToggle.contains(event.target)) {
        document.getElementById('popupMenu').style.display = 'none';
        settingsPanel.style.display = 'none';
    }
});

document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM загружен - простая версия');
    
    // Инициализация режима
    toggleMode();
    
    // Добавляем пример Jivo кнопки при первом запуске
    if (jivoButtons.length === 0) {
        addJivoButton();
    }
});
</script>

</body>
</html> "
}
